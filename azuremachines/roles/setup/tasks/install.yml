  - name: Create resource group
    azure_rm_resourcegroup:
      name: "{{ myResourceGroup }}"
      location: eastus
  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: "{{ myResourceGroup }}"
      name: myVnet
      address_prefixes: "10.0.0.0/16"
  - name: Add subnet
    azure_rm_subnet:
      resource_group: "{{ myResourceGroup }}"
      name: mySubnet
      address_prefix: "10.0.1.0/24"
      virtual_network: myVnet
  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: "{{ myResourceGroup }}"
      allocation_method: Static
      name: myPublicIP
    register: output_ip_address
  - name: Public IP of VM
    debug:
      msg: "The public IP is {{ output_ip_address.state.ip_address }}."
  - name: Create Network Security Group that allows SSH
    azure_rm_securitygroup:
      resource_group: "{{ myResourceGroup }}"
      name: myNetworkSecurityGroup
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 1001
          direction: Inbound
  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: "{{ myResourceGroup }}"
      name: myNIC
      virtual_network: myVnet
      subnet: mySubnet
      public_ip_name: myPublicIP
      security_group: myNetworkSecurityGroup
  - name: Create VM
    azure_rm_virtualmachine:
      resource_group: "{{ myResourceGroup }}"
      name: "{{ vm_Name }}"
      vm_size: Standard_DS1_v2
      admin_username: azureuser
      ssh_password_enabled: false
      ssh_public_keys:
        - path: /home/azureuser/.ssh/authorized_keys
          key_data: "{{ ssh_key }}"
      network_interfaces: myNIC
      image:
        offer: 0001-com-ubuntu-server-focal
        publisher: Canonical
        sku: '20_04-lts'
        version: 20.04.202201310
  - name: Add host to prov group
    add_host:
      name: "{{ vm_Name }}"
      groups: provisioning
    tags:
      - inventory

  - name: "debug"
    debug:
      msg: "{{ groups }}"
      
  - name: "sleep 5 min before next part of script"
    ansible.builtin.shell:
      cmd: sleep 5m
      
- hosts: provisioning
  become: true
  tasks:
  - name: "debsums > /root/inventory/debsums-{{ ansible_date_time.date }}.txt"
    ansible.builtin.shell:
      cmd: 'debsums > /root/inventory/debsums-{{ ansible_date_time.date }}.txt'
    ignore_errors: yes

  - name: "getfacl -R / | grep -v /proc > /root/inventory/permissions-{{ ansible_date_time.date }}.acl"
    ansible.builtin.shell:
      cmd: 'getfacl -R / | grep -v /proc > /root/inventory/permissions-{{ ansible_date_time.date }}.acl'

  - name: "ufw status verbose > /root/inventory/ufw-firewall-{{ ansible_date_time.date }}.txt"
    ansible.builtin.shell:
      cmd: 'ufw status verbose > /root/inventory/ufw-firewall-{{ ansible_date_time.date }}.txt'

  - name: "nmap -p 1-65535 -T4 -v localhost > /root/inventory/nmap-{{ ansible_date_time.date }}.txt"
    ansible.builtin.shell:
      cmd: 'nmap -p 1-65535 -T4 -v localhost > /root/inventory/nmap-{{ ansible_date_time.date }}.txt'

  - name: "lynis audit system --quiet --auditor \"Ansible Initial Setup Auditor\" --logfile /root/inventory/lynis-{{ ansible_date_time.date }}.txt"
    ansible.builtin.shell:
      cmd: 'lynis audit system --quiet --auditor "Ansible Initial Setup Auditor" --logfile /root/inventory/lynis-{{ ansible_date_time.date }}.txt'
